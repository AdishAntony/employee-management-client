{"version":3,"sources":["app/actions/login.js","app/utils/apiUrl.js","app/utils/Session.js","app/utils/axiosInterceptor.js","app/utils/request.js","app/components/login/api.js","app/components/login/index.js","app/actions/employee.js","app/components/employees/api.js","app/components/employees/index.js","app/Route.js","app/Main.js","reportWebVitals.js","app/reducers/login.js","app/reducers/employee.js","app/reducers/index.js","index.js","configureStore.js"],"names":["LOGIN_CHECK_START","LOGIN_CHECK_SUCCESS","LOGIN_CHECK_FAILURE","REGISTER_START","REGISTER_SUCCESS","REGISTER_FAILURE","LOGOUT","loginCheckFailure","res","errorMessage","type","payload","error","registerFailure","AUTH","EMPLOYEE","Session","setToken","value","localStorage","setItem","getToken","getItem","clearAll","clear","axiosInstance","axios","create","baseURL","headers","timeout","errorHandler","undefined","response","status","removeToken","Promise","reject","interceptors","request","use","Authorization","requestHandler","responseHandler","url","params","method","data","param","checkLogin","dispatch","then","message","token","catch","reason","registerUser","connect","state","loading","loginReducer","isLoggedIn","loadingSignup","errorMessageSignup","successMessageSignup","props","history","push","className","onSubmit","e","preventDefault","firstName","target","lastName","email","password","for","id","name","placeholder","required","autofocus","disabled","class","RECEIVE_EMPLOYEE_SUCCESS","RECEIVE_EMPLOYEE_FAILURE","DELETE_EMPLOYEE_START","DELETE_EMPLOYEE_SUCCESS","DELETE_EMPLOYEE_FAILURE","ADD_EMPLOYEE_START","ADD_EMPLOYEE_SUCCESS","ADD_EMPLOYEE_FAILURE","EDIT_EMPLOYEE_START","EDIT_EMPLOYEE_SUCCESS","EDIT_EMPLOYEE_FAILURE","deleteEmployeeFailure","addEmployeeFailure","editEmployeeFailure","getEmployees","deleteEmployee","successMessage","addEmployee","editEmployee","employeeReducer","useState","showLogoutModal","setShowLogoutModal","showDeleteModal","setShowDeleteModal","showAddModal","setShowAddModal","showEditModal","setShowEditModal","deleteRecord","setDeleteRecord","editRecord","setEditRecord","handleEditChange","prevState","handleLogoutModalClose","handleDeleteModalClose","handleAddModalClose","handleEditModalClose","useEffect","Fragment","onChange","query","href","onClick","role","hidden","employees","map","item","employee_id","phone_code","phone","address","handleEditModalShow","handleDeleteModalShow","length","Modal","show","onHide","backdrop","keyboard","Header","Title","Body","Footer","Button","variant","employeeId","phoneCode","selected","pattern","maxLength","rows","PrivateRoute","Component","component","rest","render","to","Routes","exact","path","Employees","Main","Route","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","action","responseSignup","store","createStore","combineReducers","reducers","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7a3039ab.chunk.js","sourcesContent":["export const LOGIN_CHECK_START = 'LOGIN_CHECK_START';\nexport const LOGIN_CHECK_SUCCESS = 'LOGIN_CHECK_SUCCESS';\nexport const LOGIN_CHECK_FAILURE = 'LOGIN_CHECK_FAILURE';\nexport const REGISTER_START = 'REGISTER_START';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAILURE = 'REGISTER_FAILURE';\nexport const LOGOUT = 'LOGOUT';\n\nexport const loginCheckStart = () => {\n    return {\n        type: LOGIN_CHECK_START\n    };\n};\n\nexport const loginCheckSuccess = res => {\n    return {\n        type: LOGIN_CHECK_SUCCESS,\n        payload: res\n    };\n};\n\nexport const loginCheckFailure = (res, errorMessage) => {\n    return {\n        type: LOGIN_CHECK_FAILURE,\n        payload: res,\n        error: errorMessage\n    };\n};\n\nexport const registerStart = () => {\n    return {\n        type: REGISTER_START\n    };\n};\n\nexport const registerSuccess = res => {\n    return {\n        type: REGISTER_SUCCESS,\n        payload: res\n    };\n};\n\nexport const registerFailure = (res, errorMessage) => {\n    return {\n        type: REGISTER_FAILURE,\n        payload: res,\n        error: errorMessage\n    };\n};\n\nexport const logout = () => {\n    return {\n        type: LOGOUT\n    };\n};\n","export const BASEURL = 'http://localhost:3001';\n\nexport const AUTH = {\n    LOGIN: '/auth/login',\n    SIGNUP: '/auth/signup'\n};\n\nexport const EMPLOYEE = {\n    GETALL: '/employee',\n    DELETE: '/employee/',\n    ADD: '/employee',\n    EDIT: '/employee/'\n};\n","export const setToken = value => {\n    localStorage.setItem(\"auth_token\", value);\n};\nexport const getToken = () => {\n    return localStorage.getItem(\"auth_token\");\n};\nexport const clearAll = () => {\n    localStorage.clear();\n};\n\nconst Session = {\n    setToken,\n    getToken,\n    clearAll\n};\n\nexport default Session;\n","import axios from 'axios';\nimport Session from './Session';\nimport { BASEURL } from './apiUrl';\n\nconst axiosInstance = axios.create({\n    baseURL: BASEURL,\n    headers: {\n        'content-type': 'application/json'\n    },\n    timeout: 1000 * 10 // Wait for 10 seconds\n});\n\nconst requestHandler = request => {\n    request.headers.Authorization = `Bearer ${Session.getToken()}`;\n\n    return request;\n};\n\nconst responseHandler = response => {\n    if (response.status === 401) {\n        Session.removeToken();\n    }\n    return response;\n};\n\nconst errorHandler = error => {\n    if (error.response != undefined) {\n        if (error.response.status === 401 && Session.getToken()) {\n            Session.removeToken();\n        }\n    }\n    return Promise.reject(error);\n};\n\naxiosInstance.interceptors.request.use(\n    request => requestHandler(request),\n    error => errorHandler(error)\n);\n\naxiosInstance.interceptors.response.use(\n    response => responseHandler(response),\n    error => errorHandler(error)\n);\n\nexport default axiosInstance;\n","import axiosInstance from './axiosInterceptor';\n\nconst get = (url, params, headers) => {\n    return axiosInstance({\n        method: 'GET',\n        url: url,\n        params: params,\n        headers: headers\n    });\n};\n\nconst post = (url, params, headers) => {\n    return axiosInstance({\n        method: 'POST',\n        url: url,\n        data: params,\n        headers: headers\n    });\n};\n\nconst put = (url, params, headers) => {\n    return axiosInstance({\n        method: 'PUT',\n        url: url,\n        data: params,\n        headers: headers\n    });\n};\n\nconst del = (url, param, headers) => {\n    return axiosInstance({\n        method: 'DELETE',\n        url: url + '/' + param,\n        headers: headers\n    });\n};\n\nexport default {\n    get,\n    post,\n    put,\n    del\n};\n","import {\n    loginCheckStart,\n    loginCheckSuccess,\n    loginCheckFailure,\n    registerStart,\n    registerSuccess,\n    registerFailure\n} from '../../actions/login';\nimport { AUTH } from '../../utils/apiUrl';\nimport request from '../../utils/request';\nimport Session from '../../utils/Session';\n\n/**\n * Login user\n * @returns\n */\nexport const checkLogin = params => {\n    return dispatch => {\n        dispatch(loginCheckStart());\n        // Call API here\n        request\n            .post(AUTH.LOGIN, params)\n            .then(response => {\n                if (!response.data.error) {\n                    if (response.data.message && response.data.data) {\n                        Session.setToken(response.data.data.token);\n                        return dispatch(\n                            loginCheckSuccess({ response: response.data.data })\n                        );\n                    }\n                }\n                return dispatch(\n                    loginCheckFailure({\n                        response: {},\n                        errorMessage: response.data.message\n                    })\n                );\n            })\n            .catch(error => {\n                return dispatch(\n                    loginCheckFailure({\n                        response: {},\n                        errorMessage: error.reason\n                    })\n                );\n            });\n    };\n};\n\n/**\n * Register user\n * @returns\n */\nexport const registerUser = params => {\n    return dispatch => {\n        dispatch(registerStart());\n        // Call API here\n        request\n            .post(AUTH.SIGNUP, params)\n            .then(response => {\n                if (!response.data.error) {\n                    if (response.data.message && response.data.data) {\n                        return dispatch(\n                            registerSuccess({ response: response.data.data, message: response.data.message })\n                        );\n                    }\n                }\n                return dispatch(\n                    registerFailure({\n                        response: {},\n                        errorMessage: response.data.message\n                    })\n                );\n            })\n            .catch(error => {\n                return dispatch(\n                    registerFailure({\n                        response: {},\n                        errorMessage: error.reason\n                    })\n                );\n            });\n    };\n};\n","import { connect } from 'react-redux';\n\nimport './signin.scss';\n\nimport { checkLogin, registerUser } from './api';\n\nconst Login = (props) => {\n    if(props.isLoggedIn) props.history.push('/employees');\n\n    const invokeLogin = e => {\n        e.preventDefault();\n        let data = { email: e.target.email.value, password: e.target.password.value }\n        props.dispatch(checkLogin(data));\n    };\n    \n    const invokeRegister = e => {\n        e.preventDefault();\n        let data = { firstName: e.target.firstName.value, lastName: e.target.lastName.value, email: e.target.email.value, password: e.target.password.value }\n        props.dispatch(registerUser(data));\n    };\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-sm\">\n                    <form className=\"form-signin\" onSubmit={invokeRegister}>\n                        <h1 className=\"h3 mb-3 font-weight-normal\">Signup</h1>\n                        <label for=\"signupFirstname\" className=\"sr-only\">First name</label>\n                        <input type=\"text\" id=\"signupFirstname\" name=\"firstName\" className=\"form-control\" placeholder=\"First name\" required autofocus />\n                        <label for=\"signupLastName\" className=\"sr-only\">Last name</label>\n                        <input type=\"text\" id=\"signupLastName\" name=\"lastName\" className=\"form-control\" placeholder=\"Last name\" required autofocus />\n                        <label for=\"inputEmailSignup\" className=\"sr-only\">Email</label>\n                        <input type=\"email\" id=\"inputEmailSignup\" name=\"email\" className=\"form-control\" placeholder=\"Email address\" required autofocus />\n                        <label for=\"inputPasswordSignup\" className=\"sr-only\">Password</label>\n                        <input type=\"password\" id=\"inputPasswordSignup\" name=\"password\" className=\"form-control\" placeholder=\"Password\" required />\n                        <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\" disabled={props.loadingSignup}>{ props.loadingSignup ? 'Loading...' : 'Signup' }</button>\n                        <span className=\"text-danger\">{props.errorMessageSignup}</span>\n                        <span className=\"text-info\">{props.successMessageSignup}</span>\n                    </form>\n                </div>\n                <div class=\"col-sm\">\n                    <form className=\"form-signin\" onSubmit={invokeLogin}>\n                        <h1 className=\"h3 mb-3 font-weight-normal\">Signin instead</h1>\n                        <label for=\"inputEmail\" className=\"sr-only\">Email address</label>\n                        <input type=\"email\" id=\"inputEmail\" name=\"email\" className=\"form-control\" placeholder=\"Email address\" required autofocus />\n                        <label for=\"inputPassword\" className=\"sr-only\">Password</label>\n                        <input type=\"password\" id=\"inputPassword\" name=\"password\" className=\"form-control\" placeholder=\"Password\" required />\n                        <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\" disabled={props.loading}>{ props.loading ? 'Loading...' : 'Signin' }</button>\n                        <span className=\"text-danger\">{props.errorMessage}</span>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    loading: state.loginReducer.loading,\n    isLoggedIn: state.loginReducer.isLoggedIn,\n    errorMessage: state.loginReducer.errorMessage,\n    loadingSignup: state.loginReducer.loadingSignup,\n    errorMessageSignup: state.loginReducer.errorMessageSignup,\n    successMessageSignup: state.loginReducer.successMessageSignup\n});\n\nexport default connect(mapStateToProps)(Login);","export const RECEIVE_EMPLOYEE_SUCCESS = 'RECEIVE_EMPLOYEE_SUCCESS';\nexport const RECEIVE_EMPLOYEE_FAILURE = 'RECEIVE_EMPLOYEE_FAILURE';\nexport const DELETE_EMPLOYEE_START = 'DELETE_EMPLOYEE_START';\nexport const DELETE_EMPLOYEE_SUCCESS = 'DELETE_EMPLOYEE_SUCCESS';\nexport const DELETE_EMPLOYEE_FAILURE = 'DELETE_EMPLOYEE_FAILURE';\nexport const ADD_EMPLOYEE_START = 'ADD_EMPLOYEE_START';\nexport const ADD_EMPLOYEE_SUCCESS = 'ADD_EMPLOYEE_SUCCESS';\nexport const ADD_EMPLOYEE_FAILURE = 'ADD_EMPLOYEE_FAILURE';\nexport const EDIT_EMPLOYEE_START = 'EDIT_EMPLOYEE_START';\nexport const EDIT_EMPLOYEE_SUCCESS = 'EDIT_EMPLOYEE_SUCCESS';\nexport const EDIT_EMPLOYEE_FAILURE = 'EDIT_EMPLOYEE_FAILURE';\n\n\nexport const receiveEmployeeSuccess = res => {\n    return {\n        type: RECEIVE_EMPLOYEE_SUCCESS,\n        payload: res\n    };\n};\n\nexport const receiveEmployeeFailure = () => {\n    return {\n        type: RECEIVE_EMPLOYEE_FAILURE\n    };\n};\n\nexport const deleteEmployeeStart = () => {\n    return {\n        type: DELETE_EMPLOYEE_START\n    };\n};\n\nexport const deleteEmployeeSuccess = (successMessage) => {\n    return {\n        type: DELETE_EMPLOYEE_SUCCESS,\n        successMessage\n    };\n};\n\nexport const deleteEmployeeFailure = (errorMessage) => {\n    return {\n        type: DELETE_EMPLOYEE_FAILURE,\n        errorMessage\n    };\n};\n\nexport const addEmployeeStart = () => {\n    return {\n        type: ADD_EMPLOYEE_START\n    };\n};\n\nexport const addEmployeeSuccess = (successMessage) => {\n    return {\n        type: ADD_EMPLOYEE_SUCCESS,\n        successMessage\n    };\n};\n\nexport const addEmployeeFailure = (errorMessage) => {\n    return {\n        type: ADD_EMPLOYEE_FAILURE,\n        errorMessage\n    };\n};\n\nexport const editEmployeeStart = () => {\n    return {\n        type: EDIT_EMPLOYEE_START\n    };\n};\n\nexport const editEmployeeSuccess = (successMessage) => {\n    return {\n        type: EDIT_EMPLOYEE_SUCCESS,\n        successMessage\n    };\n};\n\nexport const editEmployeeFailure = (errorMessage) => {\n    return {\n        type: EDIT_EMPLOYEE_FAILURE,\n        errorMessage\n    };\n};\n","import {\n    receiveEmployeeSuccess,\n    receiveEmployeeFailure,\n    deleteEmployeeStart,\n    deleteEmployeeSuccess,\n    deleteEmployeeFailure,\n    addEmployeeStart,\n    addEmployeeSuccess,\n    addEmployeeFailure,\n    editEmployeeStart,\n    editEmployeeSuccess,\n    editEmployeeFailure\n} from '../../actions/employee';\nimport { EMPLOYEE } from '../../utils/apiUrl';\nimport request from '../../utils/request';\n\n/**\n * Get employees\n * @returns\n */\nexport const getEmployees = params => {\n    return dispatch => {\n        // Call API here\n        request\n            .get(EMPLOYEE.GETALL, params)\n            .then(response => {\n                if (!response.data.error) {\n                    if (response.data.message && response.data.data) {\n                        return dispatch(\n                            receiveEmployeeSuccess({ response: response.data.data })\n                        );\n                    }\n                }\n            })\n            .catch(error => {\n                return dispatch(\n                    receiveEmployeeFailure()\n                );\n            });\n    };\n};\n\n/**\n * Delete employee\n * @returns\n */\nexport const deleteEmployee = params => {\n    return dispatch => {\n        dispatch(deleteEmployeeStart());\n        // Call API here\n        request\n            .del(EMPLOYEE.DELETE, params.id)\n            .then(response => {\n                if (!response.data.error) {\n                    if (response.data.message) {\n                        return dispatch(\n                            deleteEmployeeSuccess(response.data.message)\n                        );\n                    }\n                }\n                return dispatch(\n                    deleteEmployeeFailure(response.data.message)\n                );\n            })\n            .catch(error => {\n                return dispatch(\n                    deleteEmployeeFailure(error.reason)\n                );\n            });\n    };\n};\n\n/**\n * Add employee\n * @returns\n */\nexport const addEmployee = params => {\n    return dispatch => {\n        dispatch(addEmployeeStart());\n        // Call API here\n        request\n            .post(EMPLOYEE.ADD, params)\n            .then(response => {\n                if (!response.data.error) {\n                    if (response.data.message) {\n                        return dispatch(\n                            addEmployeeSuccess(response.data.message)\n                        );\n                    }\n                }\n                return dispatch(\n                    addEmployeeFailure(response.data.message)\n                );\n            })\n            .catch(error => {\n                return dispatch(\n                    addEmployeeFailure(error.reason)\n                );\n            });\n    };\n};\n\n/**\n * Edit employee\n * @returns\n */\nexport const editEmployee = params => {\n    return dispatch => {\n        dispatch(editEmployeeStart());\n        // Call API here\n        request\n            .put(EMPLOYEE.EDIT+params.id, params)\n            .then(response => {\n                if (!response.data.error) {\n                    if (response.data.message) {\n                        return dispatch(\n                            editEmployeeSuccess(response.data.message)\n                        );\n                    }\n                }\n                return dispatch(\n                    editEmployeeFailure(response.data.message)\n                );\n            })\n            .catch(error => {\n                return dispatch(\n                    editEmployeeFailure(error.reason)\n                );\n            });\n    };\n};\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Modal, Button } from 'react-bootstrap';\nimport './dashboard.scss';\n\nimport Session from '../../utils/Session';\nimport { logout } from '../../actions/login';\nimport { getEmployees, deleteEmployee, editEmployee, addEmployee } from './api';\n\nconst Employees = (props) => {\n    const [showLogoutModal, setShowLogoutModal] = useState(false);\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\n    const [showAddModal, setShowAddModal] = useState(false);\n    const [showEditModal, setShowEditModal] = useState(false);\n    const [deleteRecord, setDeleteRecord] = useState({});\n    const [editRecord, setEditRecord] = useState({});\n\n        const invokeLogout = e => {\n            e.preventDefault();\n            Session.clearAll();\n            props.dispatch(logout());\n            props.history.push('/');\n        };\n\n        const invokeSearch = e => {\n            e.preventDefault();\n            props.dispatch(getEmployees({query: e.target.value}));\n        };\n\n        const invokeDelete = e => {\n            e.preventDefault();\n            props.dispatch(deleteEmployee(deleteRecord));\n            setShowDeleteModal(false);\n        }\n\n        const invokeEdit = e => {\n            e.preventDefault();\n            props.dispatch(editEmployee(editRecord));\n            setShowEditModal(false);\n        }\n\n        const invokeAdd = e => {\n            e.preventDefault();\n            let data = {\n                employeeId: e.target.employeeId.value,\n                name: e.target.name.value,\n                email: e.target.email.value,\n                phoneCode: e.target.phoneCode.value,\n                phone: e.target.phone.value,\n                address: e.target.address.value\n            };\n            props.dispatch(addEmployee(data));\n            setShowAddModal(false);\n        }\n\n        const handleEditChange = e => {\n            const { name, value } = e.target;\n            setEditRecord(prevState => ({\n                ...prevState,\n                [name]: value\n            }));\n        }\n\n        const handleLogoutModalClose = (e) => {\n            e.preventDefault();\n            setShowLogoutModal(false);\n        }\n\n        const handleLogoutModalShow = (e) => {\n            e.preventDefault();\n            setShowLogoutModal(true);\n        }\n\n        const handleDeleteModalClose = (e) => {\n            e.preventDefault();\n            setShowDeleteModal(false);\n        }\n\n        const handleDeleteModalShow = (e, item) => {\n            e.preventDefault();\n            setDeleteRecord(item);\n            setShowDeleteModal(true);\n        }\n\n        const handleAddModalClose = (e) => {\n            e.preventDefault();\n            setShowAddModal(false);\n        }\n\n        const handleAddModalShow = (e) => {\n            e.preventDefault();\n            setShowAddModal(true);\n        }\n\n        const handleEditModalClose = (e) => {\n            e.preventDefault();\n            setShowEditModal(false);\n        }\n\n        const handleEditModalShow = (e, item) => {\n            e.preventDefault();\n            setEditRecord(item);\n            setShowEditModal(true);\n        }\n\n        useEffect(() => {\n            props.dispatch(getEmployees());\n        }, [props.loading]);\n        \n        return (\n            <React.Fragment>\n                    <nav className=\"navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0\">\n                        <input className=\"form-control form-control-dark w-100\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" onChange={invokeSearch} />\n                        <ul className=\"navbar-nav px-3\">\n                            <li className=\"nav-item text-nowrap\">\n                            <a className=\"nav-link\" href=\"#logout\" onClick={handleLogoutModalShow}>Sign out</a>\n                            </li>\n                        </ul>\n                    </nav>\n\n                    <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <main role=\"main\" className=\"col-md-8 ml-sm-auto col-lg-12 pt-3 px-4\">\n                        <div className=\"col-md-12 text-right\">\n                            <span className=\"alert alert-danger\" hidden={!props.errorMessage}>{props.errorMessage}</span>\n                            <span className=\"alert alert-success\" hidden={!props.successMessage}>{props.successMessage}</span>\n                        </div>\n                        <h1 className=\"h2\">Employees</h1>\n                        <div className=\"col-md-12 text-right\">\n                            <button type=\"button\" className=\"btn btn-primary pull-right\" onClick={handleAddModalShow}>Add new</button>\n                        </div><br />\n                        <div className=\"table-responsive\">\n                            <table className=\"table table-striped table-sm\">\n                            <thead>\n                                <tr>\n                                <th>Employee ID</th>\n                                <th>Name</th>\n                                <th>Email</th>\n                                <th>Phone</th>\n                                <th>Address</th>\n                                <th></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {props.data.employees.map(item => {\n                                    return(\n                                        <tr key={item.id}>\n                                            <td>{item.employee_id}</td>\n                                            <td>{item.name}</td>\n                                            <td>{item.email}</td>\n                                            <td>{item.phone_code+item.phone}</td>\n                                            <td>{item.address}</td>\n                                            <td>\n                                                <button type=\"button\" className=\"btn btn-primary\" onClick={(e) => handleEditModalShow(e, item)}>Edit</button>&nbsp;\n                                                <button type=\"button\" className=\"btn btn-danger\" onClick={(e) => handleDeleteModalShow(e, item)}>Delete</button>\n                                            </td>\n                                        </tr>\n                                    )\n                                }) }\n                                <p hidden={props.data.employees.length > 0}>No records found</p>\n                             </tbody>\n                            </table>\n                        </div>\n                        </main>\n                    </div>\n                </div>\n\n                {/* Logout modal */}\n                <Modal\n                    show={showLogoutModal}\n                    onHide={handleLogoutModalClose}\n                    backdrop=\"static\"\n                    keyboard={false}\n                >\n                    <Modal.Header>\n                    <Modal.Title>Sign out ?</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        Are you sure, Do you want to proceed ?\n                    </Modal.Body>\n                    <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleLogoutModalClose}>\n                        No\n                    </Button>\n                    <Button variant=\"danger\" onClick={invokeLogout}>Yes</Button>\n                    </Modal.Footer>\n                </Modal>\n                {/* Logout modal */}\n\n                {/* Delete modal */}\n                <Modal\n                    show={showDeleteModal}\n                    onHide={handleDeleteModalClose}\n                    backdrop=\"static\"\n                    keyboard={false}\n                >\n                    <Modal.Header>\n                    <Modal.Title>Delete ?</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        Are you sure, Do you want to delete {deleteRecord.name}({deleteRecord.employee_id}) ?\n                    </Modal.Body>\n                    <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleDeleteModalClose}>\n                        No\n                    </Button>\n                    <Button variant=\"danger\" onClick={invokeDelete} disabled={props.loading}>{ props.loading ? 'Loading...' : 'Yes' }</Button>\n                    </Modal.Footer>\n                </Modal>\n                {/* Delete modal */}\n\n                {/* Add modal */}\n                <Modal\n                    show={showAddModal}\n                    onHide={handleAddModalClose}\n                    backdrop=\"static\"\n                    keyboard={false}\n                >\n                    <form onSubmit={invokeAdd}>\n                    <Modal.Header>\n                    <Modal.Title>Add new employee</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                            <label for=\"employeeId\" className=\"sr-only\">Employee ID</label>\n                            <input type=\"text\" id=\"employeeId\" name=\"employeeId\" className=\"form-control\" placeholder=\"Employee ID\" required autofocus />\n                            <label for=\"name\" className=\"sr-only\">Name</label>\n                            <input type=\"text\" id=\"name\" name=\"name\" className=\"form-control\" placeholder=\"Name\" required autofocus />\n                            <label for=\"email\" className=\"sr-only\">Email</label>\n                            <input type=\"email\" id=\"email\" name=\"email\" className=\"form-control\" placeholder=\"Email\" required autofocus />\n                            <label for=\"phoneCode\" className=\"sr-only\">Phone</label>\n                            <select className=\"form-control\" id=\"phoneCode\" name=\"phoneCode\" required autofocus>\n                                <option value=\"\" selected disabled>Phone code</option>\n                                <option value=\"+91\">+91</option>\n                            </select>\n                            <input type=\"text\" id=\"phone\" name=\"phone\" className=\"form-control\" placeholder=\"Phone\" pattern=\"\\d*\" maxLength=\"10\" required autofocus />\n                            <label for=\"address\" className=\"sr-only\">Address</label>\n                            <textarea className=\"form-control\" name=\"address\" rows=\"5\" id=\"address\" placeholder=\"Address\" required autofocus></textarea>\n                    </Modal.Body>\n                    <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleAddModalClose}>\n                        Cancel\n                    </Button>\n                            <Button variant=\"primary\" type=\"submit\" disabled={props.loading}>{ props.loading ? 'Loading...' : 'Add' }</Button>\n                    </Modal.Footer>\n                    </form>\n                </Modal>\n                {/* Add modal */}\n\n                {/* Edit modal */}\n                <Modal\n                    show={showEditModal}\n                    onHide={handleEditModalClose}\n                    backdrop=\"static\"\n                    keyboard={false}\n                >\n                    <form onSubmit={invokeEdit}>\n                    <Modal.Header>\n                    <Modal.Title>Edit employee</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                            <label for=\"employeeId\" className=\"sr-only\">Employee ID</label>\n                            <input type=\"text\" id=\"employeeId\" name=\"employee_id\" className=\"form-control\" value={editRecord.employee_id} disabled />\n                            <label for=\"name\" className=\"sr-only\">Name</label>\n                            <input type=\"text\" id=\"name\" name=\"name\" className=\"form-control\" value={editRecord.name} onChange={handleEditChange} required autofocus />\n                            <label for=\"email\" className=\"sr-only\">Email</label>\n                            <input type=\"email\" id=\"email\" name=\"email\" className=\"form-control\" value={editRecord.email} onChange={handleEditChange} required autofocus />\n                            <label for=\"phoneCode\" className=\"sr-only\">Phone</label>\n                            <select className=\"form-control\" id=\"phoneCode\" name=\"phone_code\" value={editRecord.phone_code} onChange={handleEditChange} required autofocus>\n                                <option value=\"\" selected disabled>Phone code</option>\n                                <option value=\"+91\">+91</option>\n                                <option value=\"+1\">+1</option>\n                            </select>\n                            <input type=\"text\" id=\"phone\" name=\"phone\" className=\"form-control\" value={editRecord.phone} onChange={handleEditChange} pattern=\"\\d*\" maxLength=\"10\" required autofocus />\n                            <label for=\"address\" className=\"sr-only\">Address</label>\n                            <textarea className=\"form-control\" name=\"address\" rows=\"5\" id=\"address\" value={editRecord.address} onChange={handleEditChange} required autofocus></textarea>\n                    </Modal.Body>\n                    <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleEditModalClose}>\n                        Cancel\n                    </Button>\n                            <Button variant=\"primary\" type=\"submit\" disabled={props.loading}>{ props.loading ? 'Loading...' : 'Update' }</Button>\n                    </Modal.Footer>\n                    </form>\n                </Modal>\n                {/* Edit modal */}\n\n            </React.Fragment>\n        )\n}\n\nfunction mapStateToProps(state) {\n    return {\n        data: state.employeeReducer.response,\n        successMessage: state.employeeReducer.successMessage,\n        errorMessage: state.employeeReducer.errorMessage,\n        loading: state.employeeReducer.loading\n    };\n}\n\nexport default connect(mapStateToProps)(Employees);","import React from 'react';\nimport { Switch, Redirect, Route } from 'react-router-dom';\n\nimport Login from './components/login/';\nimport Employees from './components/employees';\n\nimport Session from './utils/Session';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={(props) => (\n        Session.getToken()\n        ? <Component {...props} />\n        : <Redirect to='/' />\n    )} />\n)\n\nconst Routes = () => {\n        return (\n            <Switch>\n                <Route exact path= \"/\" render={(props) => ( Session.getToken() ? (<Redirect to=\"/employees\" />) : (<Login {...props} />) )} />\n                <PrivateRoute exact path='/employees' component={Employees} />\n            </Switch>\n        );\n}\n\nexport default Routes;\n","import React from 'react';\n\nimport Routes from './Route';\n\nconst Main = (props) => {\n        return (\n            <Routes />\n        );\n}\n\nexport default Main;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n    LOGIN_CHECK_START,\n    LOGIN_CHECK_SUCCESS,\n    LOGIN_CHECK_FAILURE,\n    REGISTER_START,\n    REGISTER_SUCCESS,\n    REGISTER_FAILURE,\n    LOGOUT\n} from '../actions/login';\n\n// Initial state\nconst initialState = {};\n\nexport const loginReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case LOGIN_CHECK_START:\n            return {\n                ...state,\n                response: {},\n                isLoggedIn: false,\n                loading: true,\n                errorMessage: ''\n            };\n\n        case LOGIN_CHECK_SUCCESS:\n            return {\n                ...state,\n                response: action.payload.response,\n                isLoggedIn: true,\n                loading: false,\n                errorMessage: ''\n            };\n\n        case LOGIN_CHECK_FAILURE:\n            return {\n                ...state,\n                response: {},\n                isLoggedIn: false,\n                loading: false,\n                errorMessage: action.payload.errorMessage\n            };\n\n        case REGISTER_START:\n            return {\n                ...state,\n                responseSignup: {},\n                loadingSignup: true,\n                errorMessageSignup: '',\n                successMessageSignup: ''\n            };\n\n        case REGISTER_SUCCESS:\n            return {\n                ...state,\n                responseSignup: action.payload.response,\n                loadingSignup: false,\n                errorMessageSignup: '',\n                successMessageSignup: action.payload.message\n            };\n\n        case REGISTER_FAILURE:\n            return {\n                ...state,\n                responseSignup: {},\n                loadingSignup: false,\n                errorMessageSignup: action.payload.errorMessage,\n                successMessageSignup: ''\n            };\n\n        case LOGOUT:\n            return {\n                ...state,\n                response: {},\n                isLoggedIn: false,\n                loading: false,\n                errorMessage: ''\n            };\n    }\n    return state;\n};\n","import {\n    RECEIVE_EMPLOYEE_SUCCESS,\n    RECEIVE_EMPLOYEE_FAILURE,\n    DELETE_EMPLOYEE_START,\n    DELETE_EMPLOYEE_SUCCESS,\n    DELETE_EMPLOYEE_FAILURE,\n    ADD_EMPLOYEE_START,\n    ADD_EMPLOYEE_SUCCESS,\n    ADD_EMPLOYEE_FAILURE,\n    EDIT_EMPLOYEE_START,\n    EDIT_EMPLOYEE_SUCCESS,\n    EDIT_EMPLOYEE_FAILURE\n} from '../actions/employee';\n\n// Initial state\nconst initialState = {\n    response: {employees: [], query: {}}\n};\n\nexport const employeeReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case RECEIVE_EMPLOYEE_SUCCESS:\n            return {\n                ...state,\n                response: action.payload.response,\n            };\n\n        case RECEIVE_EMPLOYEE_FAILURE:\n            return {\n                ...state,\n                response: {employees: [], query: {}}\n            };\n        \n        case DELETE_EMPLOYEE_START:\n            return {\n                ...state,\n                loading: true,\n                successMessage: '',\n                errorMessage: ''\n            };\n\n        case DELETE_EMPLOYEE_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                successMessage: action.successMessage,\n                errorMessage: ''\n            };\n\n        case DELETE_EMPLOYEE_FAILURE:\n            return {\n                ...state,\n                loading: false,\n                successMessage: '',\n                errorMessage: action.errorMessage\n            };\n        \n        case ADD_EMPLOYEE_START:\n            return {\n                ...state,\n                loading: true,\n                successMessage: '',\n                errorMessage: ''\n            };\n\n        case ADD_EMPLOYEE_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                successMessage: action.successMessage,\n                errorMessage: ''\n            };\n\n        case ADD_EMPLOYEE_FAILURE:\n            return {\n                ...state,\n                loading: false,\n                successMessage: '',\n                errorMessage: action.errorMessage\n            };\n\n        case EDIT_EMPLOYEE_START:\n            return {\n                ...state,\n                loading: true,\n                successMessage: '',\n                errorMessage: ''\n            };\n\n        case EDIT_EMPLOYEE_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                successMessage: action.successMessage,\n                errorMessage: ''\n            };\n\n        case EDIT_EMPLOYEE_FAILURE:\n            return {\n                ...state,\n                loading: false,\n                successMessage: '',\n                errorMessage: action.errorMessage\n            };\n    }\n    return state;\n};\n","import { loginReducer } from './login';\nimport { employeeReducer } from './employee';\n\nexport default {\n    loginReducer,\n    employeeReducer\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './app/Main';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport configureStore from './configureStore';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n        <HashRouter>\n            <Main />\n        </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './app/reducers';\n\nexport default function configureStore() {\n    return createStore(\n        combineReducers({\n            ...reducers\n        }),\n        applyMiddleware(thunk)\n    );\n}\n"],"sourceRoot":""}